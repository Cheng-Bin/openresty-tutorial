
# lua.conf

server {
    listen  8080;
    server_name _;

    # 开发环境，关闭缓存。每次修改lua代码不需要reload nginx
    # lua_code_cache off;

    location /lua {
        default_type text/html;
        content_by_lua_file lua/test.lua;
    }

    location /hello {
        default_type text/html;
        content_by_lua_file lua/hello.lua;
    }

    location /get_random_string {
        content_by_lua_file lua/get_random_string.lua;
    }

    location /decode_info {
        content_by_lua_file lua/decode_info.lua;
    }

    location /redis_test {
        content_by_lua_file lua/redis_test.lua;
    }

    location /shared_dict_cache {
        content_by_lua_file lua/shared_dict_cache.lua;
    }

    location /ffi_called {
        content_by_lua_file lua/ffi_called.lua;
    }

    location /request_header {
        content_by_lua_file lua/request_header.lua;
    }

    location /sub_request_header {
        content_by_lua_file lua/sub_request_header.lua;
    }

    location /response_header {
        content_by_lua_file lua/response_header.lua;
    }

    location /json_parse {
        content_by_lua_file lua/json_parse.lua;
    
    }

    # 2018-01-16
    location ~ /lua_request/(\d+)/(\d+) {
        # 设置nginx变量
        set $a $1;
        set $b $host;
        default_type "text/html";
        # nginx 内容处理
        content_by_lua_file lua/test_request.lua;
        # 内容处理完后调用
        echo_after_body "nginx.var.b $b";
    }

    location /lua_response_1 {
        default_type "text/html";
        content_by_lua_file lua/test_response_1.lua;
    }

    location /lua_response_2 {
        default_type "text/html";
        content_by_lua_file lua/test_response_2.lua;
    }

    location /lua_other {
        default_type "text/html";
        content_by_lua_file lua/test_other.lua;  
    } 

    location /lua_shared_dict {
        default_type "text/html";
        content_by_lua_file lua/test_lua_shared_dict.lua;
    }
}